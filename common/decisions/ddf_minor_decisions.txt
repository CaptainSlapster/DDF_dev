##########################################
# Hire for a specific Court Position
# These used to be separate decisions, but are now combined into one
# by Chad Uhl
###########################################


##Technically called Variolation at this time##
take_vaccination_decision = {
	picture = {
		reference = "gfx/interface/illustrations/decisions/decision_black_plague.dds"
	}
	decision_group_type = plague
	sort_order = 10
	title = take_vaccination_decision.t
	desc = take_vaccination_decision.desc

	cooldown = { years = 3 } # Can't do it all the time, Cheater

	is_shown = {
		exists = capital_county
		highest_held_title_tier >= tier_county
		ddf_show_variolation_trigger = yes
		trigger_if = {
			limit = {
				is_ai = yes
			}

			any_held_title = {
				tier = tier_county
				any_county_province = {
					any_province_epidemic = {
						count >= 1
					}
				}
			}
		}
		trigger_else = {
			realm_has_any_epidemic = {
				SIZE = 1
				INTENSITY = minor
			}

		}

		#Kids can't do it
		NOT = { has_trait = infirm }
		always = yes
	}


	widget = {
		gui = "decision_view_widget_option_list_generic"
		controller = decision_option_list_controller
		decision_to_second_step_button = "SELECT_ACTION"
		show_from_start = yes

		item = { # Protect yourself from smallpox
			value = protection_from_smallpox

			is_valid = {
				NOT = {has_character_modifier = ddf_variolation}
				custom_tooltip = {
					text = take_vaccination_decision_smallpox_tt
					any_realm_province = {
						any_province_epidemic = {
							epidemic_type.epidemic_trait = trait:smallpox
						}
					}
				}

			}
			is_shown = {
				any_realm_province = {
					any_province_epidemic = {
						epidemic_type.epidemic_trait = trait:smallpox
					}
				}	
			}
			current_description = vaccine_desc
			localization = smallpox_vaccine_decision
			icon = "gfx/interface/icons/message_feed/plague.dds"

			ai_chance = {
				value = 100
			}
		}

		item = { # Protect yourself from measles
			value = protection_from_measles
			is_valid = {
				NOT = {has_character_modifier = ddf_variolation}
				custom_tooltip = {
					text = take_vaccination_decision_measles_tt
					any_realm_province = {
						any_province_epidemic = {
							epidemic_type.epidemic_trait = trait:measles
						}
					}
				}
			}
			is_shown = {
				any_realm_province = {
					any_province_epidemic = {
						epidemic_type.epidemic_trait = trait:measles
					}
				}	
			}
			current_description = vaccine_desc
			localization = measles_vaccine_decision
			icon = "gfx/interface/icons/message_feed/plague.dds"

			ai_chance = {
				value = 100
			}
		}

		item = { # Protect yourself from typhoid
			value = protection_from_typhoid
			is_valid = {
				NOT = {has_character_modifier = ddf_variolation}
				custom_tooltip = {
					text = take_vaccination_decision_typhoid_tt
					any_realm_province = {
						any_province_epidemic = {
							epidemic_type.epidemic_trait = trait:typhoid
						}
					}
				}
			}
			is_shown = {
				any_realm_province = {
					any_province_epidemic = {
						epidemic_type.epidemic_trait = trait:typhoid
					}
				}	
			}
			current_description = vaccine_desc
			localization = typhoid_vaccine_decision
			icon = "gfx/interface/icons/message_feed/plague.dds"

			ai_chance = {
				value = 100
			}
		}

		item = { # Protect yourself from flu
			value = protection_from_flu
			is_valid = {
				NOT = {has_character_modifier = ddf_variolation}
				custom_tooltip = {
					text = take_vaccination_decision_flu_tt
					any_realm_province = {
						any_province_epidemic = {
							epidemic_type.epidemic_trait = trait:flu
						}
					}
				}
			}
			is_shown = {
				any_realm_province = {
					any_province_epidemic = {
						epidemic_type.epidemic_trait = trait:flu
					}
				}	
			}
			current_description = vaccine_desc
			localization = flu_vaccine_decision
			icon = "gfx/interface/icons/message_feed/plague.dds"

			ai_chance = {
				value = 100
			}
		}

		item = { # Protect yourself from consumption (TB)
			value = protection_from_consumption
			is_valid = {
				NOT = {has_character_modifier = ddf_variolation}
				custom_tooltip = {
					text = take_vaccination_decision_consumption_tt
					any_realm_province = {
						any_province_epidemic = {
							epidemic_type.epidemic_trait = trait:consumption
						}
					}
				}
			}
			is_shown = {
				any_realm_province = {
					any_province_epidemic = {
						epidemic_type.epidemic_trait = trait:consumption
					}
				}	
			}
			current_description = vaccine_desc
			localization = consumption_vaccine_decision
			icon = "gfx/interface/icons/message_feed/plague.dds"

			ai_chance = {
				value = 100
			}
		}
		item = { # Protect yourself from diphtheria
			value = protection_from_diphtheria
			is_valid = {
				NOT = {has_character_modifier = ddf_variolation}
				custom_tooltip = {
					text = take_vaccination_decision_diphtheria_tt
					any_realm_province = {
						any_province_epidemic = {
							epidemic_type.epidemic_trait = trait:diphtheria
						}
					}
				}
			}
			is_shown = {
				any_realm_province = {
					any_province_epidemic = {
						epidemic_type.epidemic_trait = trait:diphtheria
					}
				}	
			}
			current_description = vaccine_desc
			localization = diphtheria_vaccine_decision
			icon = "gfx/interface/icons/message_feed/plague.dds"

				ai_chance = {
					value = 100
				}
		}

		item = { # Protect yourself from black death
			value = protection_from_black_death
			is_valid = {
				NOT = {has_character_modifier = ddf_variolation}
				custom_tooltip = {
					text = take_vaccination_decision_black_death_tt
					any_realm_province = {
						any_province_epidemic = {
							epidemic_type.epidemic_trait = trait:bubonic_plague
						}
					}
				}
			}
			is_shown = {
				any_realm_province = {
					any_province_epidemic = {
						epidemic_type.epidemic_trait = trait:bubonic_plague
					}
				}	
			}
			current_description = vaccine_desc
			localization = black_death_vaccine_decision
			icon = "gfx/interface/icons/message_feed/plague.dds"

				ai_chance = {
					value = 100
				}
		}
	}	


	effect = {	

		if = {
			limit = {
				scope:protection_from_smallpox = yes
			}
			random_list = {
				20 = {
					add_character_flag = disease_immunity_smallpox
					add_character_modifier = {
						modifier = ddf_variolation
						months = 24
					}
				}
				20 = {
					custom_tooltip = {
						text = take_vaccination_decision_tt
	
					}
					trigger_event = {
						on_action = ddf_event_disease_pulse
					}
				}
			}
		}
		if = {
			limit = {
				scope:protection_from_measles = yes
			}
			random_list = {
				20 = {
					add_character_flag = disease_immunity_measles
					add_character_modifier = {
						modifier = ddf_variolation
						months = 24
					}
				}
				20 = {
					custom_tooltip = {
						text = take_vaccination_decision_tt
	
					}
					add_character_modifier = {
						modifier = ddf_variolation_fail
						months = 24
					}
					trigger_event = {
						on_action = ddf_event_disease_pulse
					}
				}
			}
		}
		if = {
			limit = {
				scope:protection_from_typhoid = yes
			}
			random_list = {
				20 = {
					add_character_flag = disease_immunity_typhoid
					add_character_modifier = {
						modifier = ddf_variolation
						months = 24
					}
				}
				20 = {
					custom_tooltip = {
						text = take_vaccination_decision_tt
	
					}
					trigger_event = {
						on_action = ddf_event_disease_pulse
					}
				}
			}
		}
		if = {
			limit = {
				scope:protection_from_flu = yes
			}
			random_list = {
				20 = {
					add_character_flag = disease_immunity_flu
					add_character_modifier = {
						modifier = ddf_variolation
						months = 24
					}
				}
				20 = {
					custom_tooltip = {
						text = take_vaccination_decision_tt
	
					}
					trigger_event = {
						on_action = ddf_event_disease_pulse
					}
				}
			}
		}



		#custom_tooltip = stress_loss_drunkard_decision_effect_tooltip
		#show_as_tooltip = { #The effect is actually applied in the event itself
		#	add_character_modifier = {
		#		modifier = ddf_variolation
		#		years = 1.5
		#	}
		#}
		#trigger_event = {
		#	id = ddf_health.0011
		#	days = {1 15}
		#}

	}


	ai_check_interval = 2

	ai_potential = {
		NOT = { has_character_flag = has_character_modifier = ddf_variolation }
	}

	ai_will_do = {
		#People would really like to do this for their own protection
		base = 5

		modifier = {
			add = 5
			ai_rationality >=10
		}
		modifier = {
			add = 5
			ai_rationality >=50
		}
		modifier = {
			add = 5
			ai_rationality >=90
		}
		modifier = {
			add = -5
			ai_rationality <=-25
		}

		modifier = {
			add = -10
			ai_zeal >=50
		}

		ai_value_modifier = {
			ai_zeal = -0.85
			ai_greed = 0.45
			ai_boldness = 0.35 
			ai_honor = 0.2

		}
		
	}


}


#
# TEST
#
#

